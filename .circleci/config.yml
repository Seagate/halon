---
#
# Common parts that can be re-used in the actual CircleCI configuration sub-tree
#
templates:

  docker_auth:
    - seagate: &auth-ssg
        username: seagateci
        password: $SSG_DOCKERHUB_PASSWD

  docker_images:
    - latest: &docker-image-latest
        docker:
          - image: seagate/halon-devel:latest
            auth: *auth-ssg

    - 7.4: &docker-image-74
        docker:
          - image: seagate/halon-devel:7.4
            auth: *auth-ssg

    - 7.3: &docker-image-73
        docker:
          - image: seagate/halon-devel:7.3
            auth: *auth-ssg

    - ut: &docker-image-ut
        docker:
          - image: seagate/halon-devel:latest
            auth: *auth-ssg
          - image: rabbitmq:3

  steps:
    - rpmbuild: &rpmbuild
      - attach_workspace:
          at: /root
      - run:
          name: Downloading latest Mero master rpms
          command: |
              mkdir -p ~/rpmbuild/RPMS/x86_64
              cd ~/rpmbuild/RPMS/x86_64
              os_release=$(grep -Po '\d\.\d(?=\.\d{4})' /etc/redhat-release | tr -d .)
              if [[ $os_release == 75 ]] ; then os_release=latest ; fi
              for url in $(~/halon/scripts/circleci/latest-artifacts mero master $os_release)
              do
                  echo "$url"
                  curl "${url}?circle-token=$SSG_CIRCLECI_MERO_CI_API_TOKEN" -o $(basename "$url")
              done
      - run:
          name: Installing latest Mero master rpms
          command: |
              yum install -y ~/rpmbuild/RPMS/x86_64/mero-*.rpm
      - run:
          name: Building Halon rpms
          working_directory: ~/halon
          command: |
              # a sinle-threaded build is required due to a limited resources
              # available on CircleCI to avoid out-of-memory compilation failure
              make rpms build_jobs=1
      - persist_to_workspace:
          root: /root/rpmbuild
          paths:
            - RPMS

  filters:
    - only_master: &filter-only-master
        branches:
          only: [ master ]

    - ignore_master: &filter-ignore-master
        branches:
          ignore: [ master ]

    - release_tags: &filter-release-tags
        branches:
          ignore: '/.*/'
        tags:
          only: '/^\d+\.\d+.*/'

#
# CircleCI configuration
#
version: 2


# CircleCI jobs
jobs:

  checkout:
    <<: *docker-image-latest
    working_directory: ~/halon
    steps:
      - checkout

      - run:
          name: Env
          command: printenv | grep ^CIRCLE

      - run:
          name: Halon revision
          command: |
              git describe
              git --no-pager log -1

      - run:
          name: Copying cached Stack work
          command: cp -a ~/.stack-work .

      - persist_to_workspace:
          root: /root
          paths:
            - halon

  build:
    <<: *docker-image-latest
    steps:
      - attach_workspace:
          at: /root

      - run:
          name: Checking-out latest Mero master
          working_directory: ~/
          command: |
              # keyscan is needed to prevent ssh from falling into interactive
              # mode with the nasty
              #   Are you sure you want to continue connecting (yes/no)?
              mkdir -p ~/.ssh
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone --recursive ${CIRCLE_REPOSITORY_URL%/*}/mero.git

      - run:
          name: Mero revision
          working_directory: ~/mero
          command: |
              git describe
              git --no-pager log -1

      - run:
          name: Building Mero master
          working_directory: ~/mero
          command: |
              ./autogen.sh
              ./configure --with-linux=/lib/modules/$(yum list installed kernel | tail -n1 | awk '{ print $2 }').x86_64/build
              make -j8

      # - run:
      #     name: Linking cached Stack work
      #     command: ln -sf ~/.stack-work ~/halon

      - run:
          name: Building Halon
          working_directory: ~/halon
          no_output_timeout: 45m
          # the second `make` invocation is needed as a workaround for the
          # following build error of 'regex-tdfa' package:
          #
          #   --  While building custom Setup.hs for package regex-tdfa-1.2.2 using:
          #   /root/.stack/setup-exe-cache/x86_64-linux/Cabal-simple_mPHDZzAJ_1.24.2.0_ghc-8.0.2 --builddir=.stack-work/dist/x86_64-linux/Cabal-1.24.2.0 build --ghc-options " -ddump-hi -ddump-to-file"
          #   Process exited with code: ExitFailure (-9) (THIS MAY INDICATE OUT OF MEMORY)
          #   Logs have been written to: /root/halon/.stack-work/logs/regex-tdfa-1.2.2.log
          #
          # TODO: investigate the root cause and implement a proper solution
          command: ./scripts/h0 make || ./scripts/h0 make

      - persist_to_workspace:
          root: /root
          paths:
            - halon
            - mero

  unit_test:
    <<: *docker-image-ut
    steps:
      - attach_workspace:
          at: /root
      - run:
          name: Running Halon unit tests
          working_directory: ~/halon
          no_output_timeout: 30m
          command: ./scripts/h0 test

  rpmbuild:
    <<: *docker-image-latest
    steps: *rpmbuild

  rpmbuild_74:
    <<: *docker-image-74
    steps: *rpmbuild

  rpmbuild_73:
    <<: *docker-image-73
    steps: *rpmbuild

  artifacts:
    docker:
      - image: centos
    steps:
      - attach_workspace:
          at: /root/rpmbuild
      - store_artifacts:
          path: /root/rpmbuild/RPMS/x86_64
          destination: rpms

  create_github_release:
    <<: *docker-image-latest
    steps:
      - checkout
      - run:
          name: Env
          command: printenv | grep ^CIRCLE
      - run:
          name: Create GitHub release
          command: ./scripts/circleci/github-release --verbose

  github_release_latest:
    <<: *docker-image-latest
    working_directory: ~/mero
    steps:
      - checkout
      - run:
          name: Add GitHub release for the latest CentOS release
          command: ./scripts/circleci/github-release --verbose --update latest

  github_release_74:
    <<: *docker-image-74
    working_directory: ~/mero
    steps:
      - checkout
      - run:
          name: Add GitHub release for CentOS 7.4
          command: ./scripts/circleci/github-release --verbose --update 74

  github_release_73:
    <<: *docker-image-73
    working_directory: ~/mero
    steps:
      - checkout
      - run:
          name: Add GitHub release for CentOS 7.3
          command: ./scripts/circleci/github-release --verbose --update 73

# CircleCI workflows
workflows:
  version: 2

  precommit:
    jobs:
      - checkout:
          context: ssg-auth
          filters: *filter-ignore-master
      - build:
          context: ssg-auth
          filters: *filter-ignore-master
          requires: [ checkout ]
      - unit_test:
          context: ssg-auth
          filters: *filter-ignore-master
          requires: [ build ]
      - rpmbuild:
          context: ssg-auth
          filters: *filter-ignore-master
          requires: [ checkout ]

  master_latest:
    jobs:
      - checkout:
          context: ssg-auth
          filters: *filter-only-master
      - rpmbuild:
          context: ssg-auth
          filters: *filter-only-master
          requires: [ checkout ]
      - artifacts:
          filters: *filter-only-master
          requires: [ rpmbuild ]

  master_74:
    jobs:
      - checkout:
          context: ssg-auth
          filters: *filter-only-master
      - rpmbuild_74:
          context: ssg-auth
          filters: *filter-only-master
          requires: [ checkout ]
      - artifacts:
          filters: *filter-only-master
          requires: [ rpmbuild_74 ]

  master_73:
    jobs:
      - checkout:
          context: ssg-auth
          filters: *filter-only-master
      - rpmbuild_73:
          context: ssg-auth
          filters: *filter-only-master
          requires: [ checkout ]
      - artifacts:
          filters: *filter-only-master
          requires: [ rpmbuild_73 ]

  github_release:
    jobs:
      - create_github_release:
          context: ssg-auth
          filters: *filter-release-tags
      - github_release_latest:
          context: ssg-auth
          filters: *filter-release-tags
          requires: [ create_github_release ]
      - github_release_74:
          context: ssg-auth
          filters: *filter-release-tags
          requires: [ github_release_latest ]
      - github_release_73:
          context: ssg-auth
          filters: *filter-release-tags
          requires: [ github_release_74 ]
