#!/usr/bin/env bash

set -eEu -o pipefail

PROG_NAME="${0##*/}"

H0_SRC_DIR="$(readlink -f $0)"
H0_SRC_DIR="${H0_SRC_DIR%/*/*}"
M0_SRC_DIR="${M0_SRC_DIR:-${H0_SRC_DIR%/*}/mero}"

usage()
{
    cat <<USAGE_END
Usage: $PROG_NAME command [options] HOSTS

  This is a helper script for running Halon and Mero in a development
  environment on multiple machines. It provides several commands that abstract
  common tasks which have to be performed in order to test Mero and Halon
  together when they are built in their source directories.

  Most commands require a list of hosts to operate on. The format of the HOSTS
  list is similar to that of \`pdsh\` utility, e.g.'foo[7,9-10].local,bar[0-3]'.
  The only exception to this is \`scankeys\` command that expects a list of host
  names separated by commas or spaces, e.g. 'foo1,foo2 bar.local'.

  Commands:

    scankeys HOSTS      Populates ~/.ssh/known_hosts file so that \`ssh\` won't
                        ask confirmation when connecting to a host from the
                        HOSTS list for the first time.

    install HOSTS       Installs Mero and Halon systemd services. Essentially
                        it's the same as running install-{halon,mero}-services
                        scripts on every host.

    uninstall HOSTS     The opposite to 'install'. Same as running
                        install-{halon,mero}-services scripts with '-u' option.

    start HOSTS         Starts halond service on every host. Usually, the next
                        logical step after this is to run \`halonctl mero start\`
                        or \`halonctl mero bootstrap\`.

    stop HOSTS          Stops halond service on every host.

    status HOSTS        Shows status of halond, LNet and mero-kernel on each
                        host.

    genfacts CONF       Generates /etc/halon/halon_facts.yaml file. CONF is a
                        cluster configuration file. An example of such
                        configuration can be found in the \`m0genfacts --help\`
                        output.

    up [-c CONF] HOSTS  A combination of 'install', 'start' and 'genfacts'
                        commands. A cluster configuration file can be specified
                        via '-c' option or should be available in CWD as
                        'cluster.yml'.

    clean HOSTS         Removes Halon persistent storage, logs and /var/mero
                        directory on every host.

    destroy HOSTS       Same as doing 'clean' and 'uninstall'.

    help                Print this help screen.
USAGE_END
}

die()
{
    echo "$PROG_NAME: ERROR: $@" >&2
    exit 1
}

warn()
{
    echo "$PROG_NAME: WARNING: $@" >&2
}

_pdsh()
{
    pdsh -f1 -w "$@"
}

cmd_scankeys()
{
    (( $# > 0 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts="$@"

    ssh-keyscan -t rsa ${hosts//,/ } >> ~/.ssh/known_hosts
    sudo bash -c "ssh-keyscan -t rsa ${hosts//,/ } >> /root/.ssh/known_hosts"
}

cmd_genfacts()
{
    (( $# == 1 )) ||
        die 'genfacts command requires a cluster configuration file to be' \
            'provided as an argument, please see `m0genfacts --help` for' \
            'the example'

    local cluster_config=$1

    local facts_dir=/etc/halon
    [[ -d $facts_dir ]] || sudo mkdir -p $facts_dir

    sudo $M0_SRC_DIR/utils/m0genfacts -v -c $cluster_config -o $facts_dir/halon_facts.yaml -e eth1
}

cmd_install()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts=$1

    _pdsh $hosts sudo $M0_SRC_DIR/scripts/install-mero-service -l
    _pdsh $hosts sudo $H0_SRC_DIR/scripts/install-halon-services -l
}

cmd_uninstall()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts=$1

    _pdsh $hosts sudo $M0_SRC_DIR/scripts/install-mero-service -u
    _pdsh $hosts sudo $H0_SRC_DIR/scripts/install-halon-services -u
}

cmd_start()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts=$1

    _pdsh $hosts sudo systemctl start halond
}

cmd_stop()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts=$1

    _pdsh $hosts sudo systemctl stop halond
}

cmd_status()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts=$1

    _pdsh $hosts sudo systemctl status halond
    _pdsh $hosts sudo lctl list_nids
    _pdsh $hosts sudo systemctl status mero-kernel
}

cmd_clean()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local hosts=$1

    _pdsh $hosts sudo systemctl start halon-cleanup
    _pdsh $hosts sudo rm -rf /var/mero/
}

cmd_up()
{
    (( $# > 0 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    local cluster_config=cluster.yml

    if [[ $1 == '-c' ]] ; then
        cluster_config=$2
        shift 2
    fi

    [[ -r $cluster_config ]] ||
        die "cluster configuraion file '$cluster_config' doesn't exist," \
            'see `m0genfacts --help` for the example,' \
            "'-c' option can be used to set a different location of the file"

    cmd_install $@
    cmd_start $@
    cmd_genfacts $cluster_config
}

cmd_destroy()
{
    (( $# == 1 )) ||
        die "a list of hosts required for '${FUNCNAME[0]#cmd_}' command"

    cmd_clean $1
    cmd_uninstall $1
}

command=$1
shift || die "a command argument is required, see \`$PROG_NAME --help\`"

case $command in
    scankeys|genfacts|install|uninstall|stop|status|clean|destroy)
        cmd_$command $@
        ;;
    start|up)
        [[ -x $M0_SRC_DIR/mero/.libs/m0d ]] ||
            warn "$M0_SRC_DIR: Mero is not built"
        cmd_$command $@
        ;;
    help|--help|-h)
        usage
        ;;
    *) die "unsupported command '$command', check \`$PROG_NAME --help\`" \
           'for the list of available commands'
        ;;
esac
