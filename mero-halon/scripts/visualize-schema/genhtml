#!/usr/bin/env bash
set -eu -o pipefail

## XXX Consider using Dagre JS library [https://dagrejs.github.io/].
## `visualize.hs` could generate Dagre code instead of DOT + vis.js +
## d3-graphviz.js.
##
## Example: https://cs.brown.edu/people/jcmace/d3/graph.html?id=small.json
##
## https://github.com/mdaines/viz.js calls itself a hack, highlighting
## that Dagre is not.

header() {
    cat <<'EOF'
<!DOCTYPE html>
<!-- Generated by `mero-halon/scripts/visualize-schema/genhtml` -->
<html>
<head>
<title>Resource Graph schema</title>
<meta charset="utf-8">
<link rel="icon" type="image/png"
      href="https://graphviz.org/_pages/Resources/favicon.png" />
</head>
<body>
<script src="https://d3js.org/d3.v5.min.js"></script>
<script type="javascript/worker"
        src="https://unpkg.com/viz.js@1.8.0/viz.js"></script>
<script src="https://unpkg.com/d3-graphviz@1.0.1/build/d3-graphviz.min.js">
</script>

<div id="graph"></div>

<script>
// See https://github.com/magjac/d3-graphviz/blob/master/examples/basic-zoom-fit-window.html
function attributer (d) {
    if (d.tag == 'svg') {
        const width = window.innerWidth;
        const height = window.innerHeight;
        const margin = 20;
        d3.select(this)
            .attr('width', width)
            .attr('height', height);
        d.attributes.width = width - margin;
        d.attributes.height = height - margin;
    }
}

d3.select('#graph').graphviz()
    .attributer(attributer)
    .renderDot(String.raw`
EOF
}

footer() {
    cat <<'EOF'
`);
</script>
</body>
</html>
EOF
}

body=$(mktemp)
trap "rm $body" 0
$(dirname $(readlink -f $0))/run-visualize >$body

header
cat $body
footer
