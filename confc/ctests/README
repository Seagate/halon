= CONFC =

confc is client side library for grabbing configuration data from confd (a Mero
service).

The program confc_test.c prints in the standard output the configuration data.

    $ make runconfc_test
    id = fs-1: m0_conf_filesystem { rootfid = { .container = 11, .key = 22 }, params = [ -r -p -T linux -D db -S stobs ] }
      services: id = fs-1: m0_conf_dir {}
        id = ios-1: m0_conf_service { type = M0_CST_IOS, endpoints = [ lnet:0@lo:12345:34:2 ] }
          id = node-1: m0_conf_node { memsize = 163840, nr_cpu = 0, last_state = 0, flags = 16, pool_id = 0 }
            nics: id = Nnode-1: m0_conf_dir {}
            sdevs: id = Snode-1: m0_conf_dir {}

You need to previously start the confd service. This can be done by running:

    $ cd network-transport/rpclite
    $ sudo ./st sstart confd

Note that st needs to be hacked to change the SANDBOX_DIR variable to some
location that can be written to as root, and M0_CORE_DIR to point to top level
directory of mero source code.

Some more notes on the configuration service can be found in "Notes on the
configuration service".

= confmon.sh script =

This script polls the confd service periodically and terminates when confd
fails to reply.

To start it run:

    $ make confmon

confmon.sh employs conf_poll_once.c to poll confd. It is assumed that the confd service
runs in the local node and was started with rpclite/st sstart confd.

testconfmon.sh rehearses the confmon.sh script by starting a service, starting
confmon, then brings the service down and verifies that confmon.sh finishes as
well.
