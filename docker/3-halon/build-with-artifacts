#!/bin/bash

export DC_HOST_IP=$( /sbin/ifconfig eth0 | grep "inet " | sed 's/^.*inet \([.0-9]*\) .*$/\1/')
export DC_VERBOSE=1

echo whoami:
whoami

echo iptables is
iptables -L -v

echo ifconfig is
/sbin/ifconfig

echo DC_HOST_IP=${DC_HOST_IP}
echo DOCKER_HOST=${DOCKER_HOST}

# Start rabbitmq that is used in tests.
/usr/sbin/rabbitmq-server -detached >> /var/log/rabbitmq/startup.log 2>> /var/log/rabbitmq/startup.err
export WITH_COVERAGE=yes
make
RC=$?
# save the exit code in $RC so that
# we can exit with the same code
# after extracting any log files.

mkdir artifacts
mkdir artifacts/logs
find . -name test_output | while read dir ; do \
  target=/halon/artifacts/$(echo $dir | cut --delimiter="/" --fields=2); \
  mkdir $target; \
  cp -av $dir $target ; \
done
find . -type f -name \*.log \( -regex '.*/artifacts.*' -prune -o -print \) | while read l ; do \
  cp -v $l /halon/artifacts/logs/ ; \
done

# 2015-07-14 NC - comment this out until we can resolve `inline-c` issues.
# if [ "$RC" == "0" ] ; then
#   # we build OK, so check freeze
#   # and use the return code from
#   # that as overall exit
#   make check-freeze
#   RC=$?
# fi

if [ "$RC" == "0" ] ; then
  make coverage
  RC=$?
  cp -vr coverage /halon/artifacts/
fi

cd /halon/artifacts
find | while read l ; do \
  n=$(echo $l | sed s/[^-a-zA-Z0-9/.]/_/g)
  if [[ $n != $l ]] ; then
    while test -f $n ; do
      n=${n}_
    done
    mv -v "$l" "$n"
  fi
done

exit $RC
