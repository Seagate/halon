* Dockerfiles

halon-docker-ubuntu14.04/ contains a dockerfile that will build
master branch halon, with dependencies, on top of Ubuntu 14.04

tweagremote/ is a base centos7 system with some SSH key
configuration, but nothing halon specific. This is intended to
be used as a worker node for distributed tests. See below.

These three:
1-haskell-env-on-centos-7/
2-halon-deps/
3-halon/
together form a build of halon to be run by circleci. They are
launched from the root circle.yml file. They are separated so
that they can be built/rebuilt at different times, to allow
CI to happen faster.

1-haskell-env-on-centos-7/ contains GHC and cabal on top of
centos 7.

2-halon-deps/ builds on top of 1-haskell-env-on-centos-7 and
adds a checkout of halon and submodules, and "make dep" with
all the dependencies installed.

3-halon/ contains a build of halon.

Dependency detection logic is hash based and lives in the
generate-*-version functions in functions.sh

* To run distributed tests in docker:

  install docker

  configure docker to listen on a TCP port, but make sure it is
  one that is not available to the internet (or untrusted networks).

  One of these:
  * On ubuntu, edit /etc/default/docker to have a DOCKER_OPTS
    including something like: -H 172.17.42.1:5555 where that IP address
    is the address on your docker0 interface on the host.

  * On a systemd system, edit ExecStart in /usr/lib/systemd/system/docker.service
  eg ExecStart=/usr/bin/docker -d -H 172.17.42.1:5555

  build the image for running remote tests:

  cd docker/
  docker --host=172.17.42.1:5555  build --tag=tweagremote tweagremote

  you will need to make your ssh use docker/tweagremote/id_rsa, for
  example by adding it to your ssh agent. if you don't do this,
  you will get messages like: "dev@1.2.3.4 password:" when
  running the tests below.

  now run the distributed-commands tests:

  export DC_PROVIDER=docker
  export DOCKER_HOST=http://172.17.42.1:5555

  cabal install distributed-commands --reinstall --enable-tests --run-tests --flag="distributed-tests" --flag="docker-tests"
 
