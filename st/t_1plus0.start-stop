#!/usr/bin/env bash
. $H0_SRC_DIR/st/common

### This system test bootstraps a singlenode cluster that uses
### "1+0" configuration (1 data unit, 0 parity units) and performs IO.

prepare_cluster_conf() {
    [[ -z $M0_CLUSTER ]] || return 0
    export M0_CLUSTER=$(mktemp)
    trap "rm $M0_CLUSTER" 0

    #@ XXX Shouldn't EES cluster consist of 2 nodes?
    local localhost=$(hostname)
    cat >$M0_CLUSTER <<EOF
confds: [ $localhost ]
ssus:
  - host: $localhost
    disks: /dev/loop1
clovis-apps: [ $localhost ]
pools:
  - name: pool-0
    disks: [ { host: '$localhost', filter: '/dev/loop1' } ]
    data_units: 1
    parity_units: 0
EOF
}

check_io() {
    local m0status=$(mktemp)
    local log=$(mktemp)
    local src_obj=$(mktemp)
    local dst_obj=$(mktemp)

    hctl mero status >$m0status

    local bsize=4096
    local bcount=1024
    local obj_id=1048580

    local profile=$(awk '/profile:/ {print $2}' $m0status)
    local ha_ep=$(awk '/halon \(RC\)/ {print $4}' $m0status)

    local -a clovis_fids clovis_eps
    read -ra clovis_fids <<< $(awk '/clovis-app/ {print $3}' $m0status)
    read -ra clovis_eps <<< $(awk '/clovis-app/ {print $4}' $m0status)

    dd if=/dev/urandom bs=$bsize count=$bcount of=$src_obj 2>$log

    # Immediate use of the same endpoint for another process fails.
    # Using different endpoints for c0cp & c0cat.
    local c0cp_opts="--local ${clovis_eps[0]} --process ${clovis_fids[0]}"
    local c0cat_opts="--local ${clovis_eps[1]} --process ${clovis_fids[1]}"
    c0cat_opts+=" --read-verify"

    local common_opts="--ha $ha_ep --profile $profile"
    common_opts+=" --object $obj_id --block-size $bsize --block-count $bcount"

    sudo $M0_SRC_DIR/clovis/st/utils/c0cp $common_opts $c0cp_opts $src_obj
    sudo $M0_SRC_DIR/clovis/st/utils/c0cat $common_opts $c0cat_opts >$dst_obj

    cmp $src_obj $dst_obj && rm -f $m0status $log $src_obj $dst_obj
}

prepare_cluster_conf

# Create a loop device for the pool.
sudo $M0_SRC_DIR/utils/m0setup --pool-width 1 --data-units 1 --parity-units 0 \
     --no-cas

$H0 init
cluster_bootstrap

check_io

hctl mero stop
$H0 fini

report_and_exit ${0##*/} $?
